; ModuleID = 'test.cpp'
target datalayout = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-a0:0:64-f80:32:32-n8:16:32"
target triple = "i386-pc-linux-gnu"

define i32 @_Z10handleLocki(i32 %p) nounwind {
entry:
  %p_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %p, i32* %p_addr
  %1 = load i32* %p_addr, align 4
  %2 = icmp sgt i32 %1, 12
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  %3 = load i32* %p_addr, align 4
  %4 = sub nsw i32 %3, 12
  store i32 %4, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  %5 = load i32* %p_addr, align 4
  store i32 %5, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %6 = load i32* %0, align 4
  store i32 %6, i32* %retval, align 4
  br label %return

return:                                           ; preds = %bb2
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define i32 @main() nounwind {
entry:
  %retval = alloca i32
  %0 = alloca i32
  %a = alloca i32
  %b = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 12, i32* %b, align 4
  %1 = load i32* %b, align 4
  %2 = call i32 @_Z10handleLocki(i32 %1) nounwind
  store i32 %2, i32* %a, align 4
  %3 = load i32* %a, align 4
  store i32 %3, i32* %0, align 4
  %4 = load i32* %0, align 4
  store i32 %4, i32* %retval, align 4
  br label %return

return:                                           ; preds = %entry
  %retval1 = load i32* %retval
  ret i32 %retval1
}
