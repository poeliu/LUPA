#include <pthread.h>
#include <stdlib.h>

using namespace std;

void testLock(pthread_mutex_t *mutex, pthread_mutex_t *mutex2){

  if(mutex!=NULL){
    pthread_mutex_lock(mutex);
    pthread_mutex_unlock(mutex);
  }

  if(mutex!=NULL){
    pthread_mutex_lock(mutex2);
    pthread_mutex_unlock(mutex2);
  }

  if(mutex!=NULL)
    pthread_mutex_lock(mutex);
  if(mutex!=NULL)
    pthread_mutex_unlock(mutex);


  if(pthread_mutex_lock(mutex))
    pthread_mutex_unlock(mutex);

}

int main(){
  pthread_mutex_t *mutex  = (pthread_mutex_t*)malloc(sizeof(pthread_mutex_t));
  pthread_mutex_t *mutex2 = (pthread_mutex_t*)malloc(sizeof(pthread_mutex_t));
  testLock(mutex, mutex2);
  return 0;
}
